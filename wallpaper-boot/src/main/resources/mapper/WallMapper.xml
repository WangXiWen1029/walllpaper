<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.wang.wallpaper.mapper.WallMapper">

    <resultMap id="BaseResultMap" type="com.wang.wallpaper.entity.Wall">
        <id property="wallId" column="wall_id" jdbcType="BIGINT"/>
        <result property="categoryId" column="category_id" jdbcType="BIGINT"/>
        <result property="wallName" column="wall_name" jdbcType="VARCHAR"/>
        <result property="wallPath" column="wall_path" jdbcType="VARCHAR"/>
        <result property="wallBrief" column="wall_brief" jdbcType="VARCHAR"/>
        <result property="sort" column="sort" jdbcType="INTEGER"/>
        <result property="status" column="status" jdbcType="TINYINT"/>
        <result property="createTime" column="create_time" jdbcType="TIMESTAMP"/>
        <result property="updateTime" column="update_time" jdbcType="TIMESTAMP"/>
        <result property="createBy" column="create_by" jdbcType="BIGINT"/>
    </resultMap>

    <sql id="Base_Column_List">
        wall_id
        ,category_id,wall_name,
        wall_path,wall_brief,sort,
        status,create_time,update_time,
        create_by
    </sql>

    <select id="detail" resultType="com.wang.wallpaper.pojo.WallDetailVO">
        select w.wall_id,
               w.category_id,
               w.wall_name,
               w.wall_path,
               w.wall_brief,
               w.sort,
               w.status,
               w.create_time,
               w.update_time,
               w.create_by,
               IF(u.type = 0, '系统管理员', u.nickname) as createName
        from t_wall w
                 left join t_user u on w.create_by = u.user_id
        where w.wall_id = #{wallId}
    </select>
    <select id="pageList" resultType="com.wang.wallpaper.pojo.WallVO">
        select
        w.*,IF(u.type = 0, '系统管理员', u.nickname) as createByName,c.category_name
        from t_wall w
        left join t_user u on w.create_by = u.user_id
        left join t_category c on w.category_id = c.category_id
        <where>
            <if test="wall.status!=null ">
                and w.status = #{wall.status}
            </if>
            <if test="wall.categoryId!=null and wall.categoryId !=''">
                and w.category_id = #{wall.categoryId}
            </if>
            <if test="wall.wallName!=null and wall.wallName !=''">
                and w.wall_name like concat('%',#{wall.wallName},'%')
            </if>

        </where>
        order by w.create_time desc
    </select>

    <select id="userWallList" resultType="com.wang.wallpaper.pojo.WallDTO">
        SELECT
        w.*,
        IF
        ( u.type = 0, '系统管理员', u.nickname ) AS createByName,
        c.category_name,
        temp.favorite_id,
        IF
        ( temp.favorite IS NULL, 0, 1 ) as favorite
        FROM
        t_wall w
        LEFT JOIN t_category c ON w.category_id = c.category_id
        LEFT JOIN ( SELECT wall_id,favorite_id, 1 AS favorite FROM t_user_favorite WHERE user_id = #{userId} ) temp ON
        temp.wall_id = w.wall_id
        LEFT JOIN t_user u ON w.create_by = u.user_id
        where
        w.status=1
        <if test="categoryId!=null">
            and w.category_id = #{categoryId}
        </if>
        <if test="keywords!=null and keywords!=''">
            and w.wall_name like concat('%',#{keywords},'%')
        </if>
        order by w.${sort} desc , w.wall_id desc
    </select>
    <select id="wallComment" resultType="com.wang.wallpaper.pojo.UserCommentVO">
        select uc.*,
               u.username,
               u.nickname,
               u.head_portrait
        from t_user_comment uc
                 left join t_user u ON uc.user_id = u.user_id
        where uc.wall_id = #{wallId}
          and (uc.status = 1 or (u.user_id = #{userId} and uc.status != 2))
        order by uc.create_time desc
    </select>
    <select id="wallUserList" resultType="com.wang.wallpaper.pojo.WallDTO">
        SELECT w.*,
               uf.create_time as favoriteTime,
               uf.favorite_id,
               1              as favorite
        FROM t_wall w
                 LEFT JOIN t_category c ON w.category_id = c.category_id
                 LEFT JOIN t_user_favorite uf ON w.wall_id = uf.wall_id
                 LEFT JOIN t_user u ON w.create_by = u.user_id
        WHERE uf.user_id = #{userId} and status = 1
        order by uf.create_time desc

    </select>
</mapper>
